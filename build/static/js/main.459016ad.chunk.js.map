{"version":3,"sources":["utils/colorUtils.js","components/ThemeSwtich/ThemeSwtich.js","components/Header/index.js","components/Container/index.js","components/Title/index.js","components/Badge/index.js","components/File/index.js","components/SubTitle/index.js","components/TabIcon/index.js","components/CommitDescription/index.js","components/VerticalLine/index.js","components/Conversation/index.js","components/CommitLine/index.js","components/TabConversation/index.js","components/CommitBody/index.js","pages/Home/index.js","theme/colors.js","theme/index.js","components/ChakraThemeProvider/index.js","App.js","serviceWorker.js","index.js"],"names":["themeColors","light","background","dark","ThemeSwtich","useColorMode","colorMode","toggleColorMode","icon","IconButton","variant","variantColor","aria-label","fontSize","onClick","Header","Flex","justify","align","padding","position","top","left","width","bg","borderBottomWidth","Container","children","mt","height","justifyContent","p","Title","otherProps","Stack","isInline","Text","color","Badge","text","rounded","Box","as","ml","File","BsFiles","SubTitle","DiGitBranch","Link","mx","TabIcon","React","forwardRef","prop","ref","count","flex","textTransform","CommitDescription","borderWidth","borderColor","px","borderBottom","borderBottomColor","fontWeight","MdTagFaces","FaEllipsisH","fontStyle","VerticalLine","Divider","orientation","Conversation","avatarUrl","enabledCommitDescription","extraLine","Avatar","name","src","CommitLine","backgroundColor","rigthSection","style","size","TabConversation","MdPersonAdd","AiFillGithub","MdMergeType","MdCheck","Button","CommitBody","Tabs","Home","my","colors","alfa","50","100","200","300","400","500","600","700","800","900","beta","gamma","delta","epsilon","customTheme","theme","icons","black","blackAlpha","white","whiteAlpha","transparent","gray","ChakraThemeProvider","ThemeProvider","ColorModeProvider","CSSReset","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.459016ad.chunk.js","sourcesContent":["const light = {\n  background: 'white',\n};\n\nconst dark = {\n  background: 'black',\n};\n\nconst themeColors = {\n  light,\n  dark,\n};\n\nexport default themeColors;\n","import React from 'react';\nimport { IconButton, useColorMode } from '@chakra-ui/core';\n\nconst ThemeSwtich = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const icon = colorMode === 'dark' ? 'moon' : 'sun';\n\n  return (\n    <IconButton\n      variant=\"ghost\"\n      variantColor=\"delta\"\n      aria-label=\"Call Sage\"\n      fontSize=\"xl\"\n      icon={icon}\n      onClick={toggleColorMode}\n    />\n  );\n};\n\nexport default ThemeSwtich;\n","import React from \"react\";\nimport { Flex, useColorMode } from \"@chakra-ui/core\";\nimport themeColors from \"../../utils/colorUtils\";\nimport ThemeSwtich from \"../ThemeSwtich/ThemeSwtich\";\n\nexport default function Header() {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Flex\n      justify=\"flex-end\"\n      align=\"center\"\n      padding=\"1\"\n      position=\"fixed\"\n      top=\"0\"\n      left=\"0\"\n      width=\"full\"\n      bg={themeColors[colorMode].background}\n      borderBottomWidth={1}\n    >\n      <ThemeSwtich />\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport Header from \"../Header\";\nimport { Flex } from \"@chakra-ui/core\";\n\nexport default function Container({ children }) {\n  return (\n    <>\n      <Header />\n      <Flex\n        mt=\"50px\"\n        height=\"calc(100vh - 50px)\"\n        justifyContent=\"center\"\n        align=\"center\"\n      >\n        <Flex height=\"700px\" width=\"4xl\" p=\"4\">\n          {children}\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Text, Stack } from \"@chakra-ui/core\";\n\nexport default function Title({ ...otherProps }) {\n  return (\n    <Stack isInline {...otherProps}>\n      <Text fontSize=\"4xl\">Landing maintence</Text>\n      <Text fontSize=\"4xl\" color=\"gray.500\">\n        #416\n      </Text>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport { Flex, Box, Text } from \"@chakra-ui/core\";\n\nexport default function Badge({ text, icon }) {\n  return (\n    <Flex bg=\"beta.500\" rounded=\"md\" p=\"1\" align=\"center\">\n      <Box as={icon} color=\"white\" />\n      <Text ml=\"1\" color=\"white\">\n        {text}\n      </Text>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Text, Box } from \"@chakra-ui/core\";\nimport { BsFiles } from \"react-icons/bs\";\n\nexport default function File() {\n  return (\n    <>\n      <Box as={BsFiles} />\n      <Text fontSize=\"sm\" ml=\"1\">\n        2 hours ago\n      </Text>\n    </>\n  );\n}\n","import React from \"react\";\nimport Badge from \"../Badge\";\nimport { Stack, Text, Link } from \"@chakra-ui/core\";\nimport { DiGitBranch } from \"react-icons/di\";\nimport File from \"../File/index\";\n\nexport default function SubTitle({ ...otherProps }) {\n  return (\n    <Stack isInline {...otherProps} align=\"center\">\n      <Badge text=\"Merged\" icon={DiGitBranch} />\n      <Text fontSize=\"sm\" ml=\"1\">\n        Mirau-hh merged 2 commits into{\" \"}\n        <Link color=\"alfa.500\" mx=\"1\">\n          develop\n        </Link>\n        from{\" \"}\n        <Link color=\"alfa.500\" mx=\"1\">\n          landing-maintenance\n        </Link>\n      </Text>\n      <File />\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport { Tab, Box, Text } from \"@chakra-ui/core\";\n\nconst TabIcon = React.forwardRef((prop, ref) => {\n  const { icon, count, children, ...otherProps } = prop;\n  return (\n    <Tab {...otherProps} ref={ref} flex=\"1\">\n      <Box as={icon} fontSize=\"xs\" />\n      <Text mx=\"2\" textTransform=\"uppercase\" fontSize=\"xs\">\n        {children}\n      </Text>\n      <Text fontSize=\"xs\">{count}</Text>\n    </Tab>\n  );\n});\n\nexport default TabIcon;\n","import React from \"react\";\nimport { Box, Stack, Text, IconButton } from \"@chakra-ui/core\";\nimport { MdTagFaces } from \"react-icons/md\";\nimport { FaEllipsisH } from \"react-icons/fa\";\n\nexport default function CommitDescription() {\n  return (\n    <Box borderWidth=\"1px\" borderColor=\"alfa.500\">\n      <Stack\n        isInline\n        align=\"center\"\n        justifyContent=\"space-between\"\n        px=\"2\"\n        borderBottom=\"1px\"\n        borderBottomColor=\"alfa.500\"\n      >\n        <Stack isInline>\n          <Text fontSize=\"md\" fontWeight=\"bold\">\n            Mirau-hh\n          </Text>\n          <Text fontSize=\"md\">comment 3 hour ago</Text>\n        </Stack>\n        <Stack isInline>\n          <IconButton\n            variant=\"clear\"\n            variantColor=\"teal\"\n            aria-label=\"Call Sage\"\n            fontSize=\"md\"\n            icon={MdTagFaces}\n          />\n          <IconButton\n            variant=\"clear\"\n            variantColor=\"teal\"\n            aria-label=\"Call Sage\"\n            fontSize=\"md\"\n            icon={FaEllipsisH}\n          />\n        </Stack>\n      </Stack>\n      <Box p=\"2\">\n        <Text fontStyle=\"italic\">No description provide.</Text>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Divider } from \"@chakra-ui/core\";\n\nexport default function VerticalLine({ ...otherProps }) {\n  return (\n    <Divider\n      orientation=\"vertical\"\n      borderColor=\"red.500\"\n      height=\"5\"\n      ml=\"5\"\n      {...otherProps}\n    />\n  );\n}\n","import React from \"react\";\nimport { Flex, Stack, Avatar } from \"@chakra-ui/core\";\nimport CommitDescription from \"../CommitDescription\";\nimport VerticalLine from \"../VerticalLine\";\n\nexport default function Conversation({\n  avatarUrl,\n  enabledCommitDescription = false,\n  extraLine = false,\n  children,\n}) {\n  return (\n    <Stack>\n      <Flex>\n        <Avatar name=\"Dan Abrahmov\" src={avatarUrl} />\n        <Stack flex=\"1\" ml=\"6\">\n          {enabledCommitDescription && <CommitDescription />}\n          {extraLine && <VerticalLine />}\n          {children}\n          {extraLine && <VerticalLine />}\n        </Stack>\n      </Flex>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport { Stack, Box } from \"@chakra-ui/core\";\n\nexport default function CommitLine({\n  icon,\n  text,\n  backgroundColor,\n  rigthSection,\n}) {\n  const style = backgroundColor ? { backgroundColor, color: \"white\" } : {};\n  return (\n    <Stack justifyContent=\"space-between\" isInline align=\"center\">\n      <Stack isInline align=\"center\">\n        <Box as={icon} size=\"10\" rounded=\"50%\" p=\"2\" {...style} />\n        {text}\n      </Stack>\n      <Stack>{rigthSection}</Stack>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport Conversation from \"../Conversation\";\nimport { Stack, Avatar, Box, Text, Badge, Button } from \"@chakra-ui/core\";\nimport CommitLine from \"../CommitLine\";\nimport { MdCheck, MdPersonAdd, MdMergeType } from \"react-icons/md\";\nimport { DiGitBranch } from \"react-icons/di\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport VerticalLine from \"../VerticalLine\";\n\nexport default function TabConversation() {\n  return (\n    <>\n      <Conversation\n        avatarUrl={\"https://bit.ly/dan-abramov\"}\n        enabledCommitDescription\n        extraLine\n      >\n        <CommitLine\n          icon={MdPersonAdd}\n          text={\n            <Stack isInline>\n              <Text fontWeight=\"bold\">Diego Salinas</Text>\n              <Text>added 2 commits 21 hours ago</Text>\n            </Stack>\n          }\n          backgroundColor=\"gray.200\"\n        />\n        <VerticalLine mt=\"1\" />\n        <CommitLine\n          icon={DiGitBranch}\n          text={\n            <Stack isInline align=\"center\">\n              <Box as={AiFillGithub} size=\"10\" rounded=\"50%\" p=\"2\" />\n              <Text>Add shopify to iOS landing on mobile</Text>\n            </Stack>\n          }\n          rigthSection={<Text>8adcb53</Text>}\n        />\n        <VerticalLine mt=\"1\" />\n        <CommitLine\n          icon={DiGitBranch}\n          text={\n            <Stack isInline align=\"center\">\n              <Box as={AiFillGithub} size=\"10\" rounded=\"50%\" p=\"2\" />\n              <Text>Fix mobile landing resolution center</Text>\n            </Stack>\n          }\n          rigthSection={<Text>8adcb53</Text>}\n        />\n        <VerticalLine mt=\"1\" />\n        <CommitLine\n          icon={MdMergeType}\n          text={\n            <Stack isInline align=\"center\">\n              <Avatar\n                name=\"Dan Abrahmov\"\n                src=\"https://bit.ly/dan-abramov\"\n                size=\"xs\"\n              />\n              <Text>\n                <b>Miru-hh </b>request review from <b>RenzoMuzi</b> and{\" \"}\n                <b>pgarin</b> 4 hours ago\n              </Text>\n            </Stack>\n          }\n          backgroundColor=\"gray.200\"\n        />\n      </Conversation>\n      <Conversation avatarUrl={\"https://bit.ly/kent-c-dodds\"}>\n        <CommitLine\n          icon={MdCheck}\n          text={\n            <Stack isInline align=\"center\">\n              <Text>\n                <b>RenzoMuzi</b> approved this changes 4 hours ago\n              </Text>\n            </Stack>\n          }\n          backgroundColor=\"delta.400\"\n          rigthSection={\n            <Button rounded=\"md\" backgroundColor=\"delta.600\" color=\"white\">\n              View changes\n            </Button>\n          }\n        />\n        <VerticalLine mt=\"1\" />\n        <CommitLine\n          icon={DiGitBranch}\n          text={\n            <Stack isInline align=\"center\">\n              <Text>\n                <b>Mirau-hh</b> merged commit <b>f8af9e7</b> into\n              </Text>\n              <Badge>develop</Badge>\n              <Text>2 hour ago</Text>\n            </Stack>\n          }\n          backgroundColor=\"beta.400\"\n          rigthSection={\n            <Button rounded=\"md\" backgroundColor=\"delta.600\" color=\"white\">\n              Revert\n            </Button>\n          }\n        />\n      </Conversation>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Tabs, TabList, TabPanels, TabPanel } from \"@chakra-ui/core\";\nimport { BsFiles } from \"react-icons/bs\";\nimport TabIcon from \"../TabIcon\";\nimport TabConversation from \"../TabConversation\";\n\nexport default function CommitBody({ ...otherProps }) {\n  return (\n    <Box {...otherProps}>\n      <Tabs>\n        <TabList color=\"beta.500\">\n          <TabIcon icon={BsFiles} count={0}>\n            conversation\n          </TabIcon>\n          <TabIcon icon={BsFiles} count={2}>\n            commits\n          </TabIcon>\n          <TabIcon icon={BsFiles} count={0}>\n            checks\n          </TabIcon>\n          <TabIcon icon={BsFiles} count={0}>\n            files changed\n          </TabIcon>\n        </TabList>\n\n        <TabPanels p=\"6\">\n          <TabPanel>\n            <TabConversation />\n          </TabPanel>\n          <TabPanel>\n            <p>commits</p>\n          </TabPanel>\n          <TabPanel>\n            <p>checks</p>\n          </TabPanel>\n          <TabPanel>\n            <p>files changed</p>\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Container from \"../../components/Container\";\nimport Title from \"../../components/Title\";\nimport SubTitle from \"../../components/SubTitle\";\nimport { Stack } from \"@chakra-ui/core\";\nimport CommitBody from \"../../components/CommitBody\";\n\nexport default function Home() {\n  return (\n    <Container>\n      <Stack width=\"100%\">\n        <Title />\n        <SubTitle my=\"2\" />\n        <CommitBody mt=\"4\"/>\n      </Stack>\n    </Container>\n  );\n}\n","const colors = {\n  alfa: {\n    50: '#F1F1F5',\n    100: '#E4E4E9',\n    200: '#C9C9D2',\n    300: '#ADADBC',\n    400: '#9292A5',\n    500: '#77778F',\n    600: '#5C5C79',\n    700: '#404063',\n    800: '#25254C',\n    900: '#0A0A36',\n  },\n  beta: {\n    50: '#FFF5F6',\n    100: '#FCE4E6',\n    200: '#FACACD',\n    300: '#F7AFB4',\n    400: '#F5959B',\n    500: '#F27A82',\n    600: '#D76C74',\n    700: '#BC5F65',\n    800: '#A15157',\n    900: '#864448',\n  },\n  gamma: {\n    50: '#EDF0FF',\n    100: '#D5DCFB',\n    200: '#ABB9F7',\n    300: '#8295F3',\n    400: '#5872EF',\n    500: '#2E4FEB',\n    600: '#2946D1',\n    700: '#243DB7',\n    800: '#1F359D',\n    900: '#1A2C83',\n  },\n  delta: {\n    50: '#F1FDFF',\n    100: '#D0EEF2',\n    200: '#A0DCE5',\n    300: '#71CBD7',\n    400: '#41B9CA',\n    500: '#41B9CA',\n    600: '#1095A8',\n    700: '#0E8393',\n    800: '#0C707E',\n    900: '#0A5D69',\n  },\n  epsilon: {\n    50: '#F9F4FF',\n    100: '#EEDFFF',\n    200: '#DDC0FF',\n    300: '#CBA0FF',\n    400: '#BA81FF',\n    500: '#A961FF',\n    600: '#9656E3',\n    700: '#834BC6',\n    800: '#7141AA',\n    900: '#5E368E',\n  },\n};\n\nexport default colors;\n","import { theme } from \"@chakra-ui/core\";\nimport colors from \"./colors\";\n\nconst customTheme = {\n  ...theme,\n  icons: {\n    ...theme.icons,\n  },\n  colors: {\n    black: theme.colors.black,\n    blackAlpha: theme.colors.blackAlpha,\n    white: theme.colors.white,\n    whiteAlpha: theme.colors.whiteAlpha,\n    transparent: theme.colors.transparent,\n    gray: colors.alfa, // CSS Reset uses gray constant to define the light and dark modes\n    ...colors,\n  },\n};\n\nexport default customTheme;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSReset, ColorModeProvider, ThemeProvider } from \"@chakra-ui/core\";\nimport theme from \"../../theme\";\n\nconst ChakraThemeProvider = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <ColorModeProvider>\n        <CSSReset />\n        {children}\n      </ColorModeProvider>\n    </ThemeProvider>\n  );\n};\n\nChakraThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ChakraThemeProvider;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport ChakraThemeProvider from \"./components/ChakraThemeProvider\";\n\nfunction App() {\n  return (\n    <ChakraThemeProvider>\n      <Home />\n    </ChakraThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}